version: "3.3"

services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - rabbitmq_go_net
  frontend:
    image: 'eshop-frontend'
    build: .
    environment:
      NODE_ENV: production
    ports:
      - "80:80"
  backend:
    image: 'eshop-backend'
    build:
      context: .
    container_name: eshop-backend
    depends_on:
      - library
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://library:5432/eshop
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    ports:
      - "8080:8080"
  cache:
    image: "redis"
    ports:
      - "6379:6379"
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
  library:
    restart: always
    image: sameersbn/postgresql:10-2
    environment:
      - PG_TRUST_LOCALNET=true
      - DB_NAME=eshop
      - DB_USER=postgres
      - DB_PASS=postgres
      - PG_RUNDIR=/run/postgres
      - PG_LOGDIR=/var/log/postgres
    ports:
      - "5432:5432"
    volumes:
      - data:/var/lib/postgresql
      - logs:/var/log/postgresql

volumes:
  data:
  logs:
networks:
  rabbitmq_go_net:
    driver: bridge